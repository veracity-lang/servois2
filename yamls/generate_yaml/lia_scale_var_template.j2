name: lia_{{d.Xsize}}vars

state:
  - name: a
    type: Int
  - name: b
    type: Int 
  {% filter indent(width=2) %}{{d.stateXVars}}{% endfilter %}

states_equal:
  definition: |
    (and (= a_1 a_2) (= b_1 b_2) {{d.stateXEqualCond}})
    
methods:
  - name: sum
    args: []
    return:
      - name: result
        type: Bool
    requires: |
      true
    ensures: | 
      (and
        (= a_new (- a b))
        (= b_new b)
        {{d.XinMethod1Ensures}}
        (= result true))
    terms:
      Int: [a, b, {{d.XTerms}}, (- a b)]

  - name: multiVarCondSum
    args: []
    return:
      - name: result
        type: Bool
    requires: |
      true
    ensures: |
      (and
        (ite (and (> a 0) {{d.XinMethod2Ensures.condX}}) (= a_new (+ {{d.XinMethod2Ensures.xVarTerm}} a)) (= a_new (- {{d.XinMethod2Ensures.xVarTerm}} a)))
        (= b_new b)
        {{d.XinMethod2Ensures.XEqual}}
        (= result true))
    terms:
      Int: [0, a, b, {{d.XTerms}}, (+ {{d.XinMethod2Ensures.xVarTerm}} a), (- {{d.XinMethod2Ensures.xVarTerm}} a)]
      
predicates:
  - name: "="
    type: [Int, Int]
  - name: ">"
    type: [Int, Int]
