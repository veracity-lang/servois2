name: standardToken

state:
  - name: address
    type: (Array Int Int)
  - name: balances
    type: (Array Int Int)
  - name: allowed
    type: (Array Int Int)
  - name: msg_sender
    type: Int
  - name: allowed_size
    type: Int

states_equal:
  definition:  |
    (and (= address_1 address_2)
         (= balances_1 balances_2)
         (= allowed_1 allowed_2)
         (= msg_sender_1 msg_sender_2))

methods:
  - name: transferFrom
    args:
      - name: from
        type: Int
      - name: to
        type: Int
      - name: value
        type: Int
    return:
      - name: result
        type: Bool
    requires:  |
      (and (not (= to (select address 0))) (<= value (select balances from)) (<= value (select allowed (+ (* allowed_size from) msg_sender))))
    
    ensures:  |
      (and (let ((balances_1 (store balances from (- (select balances from) value))))
            (let ((balances_3 (store balances_1 to (+ (select balances_1 to) value)))) 
              (let ((allowed_1 (store allowed (+ (* allowed_size from) msg_sender) (- (select allowed (+ (* allowed_size from) msg_sender)) value))))
                (and (= balances_new balances_3)(= allowed_new allowed_1)))))
           (= result true)
      )
    terms:  
      Int: [$1, $2, $3, (select balances $1), (select balances $2), (- (select balances $1) $3), (- (select balances $2) $3)]
      (Array Int Int): [allowed, balances, (store balances $1 (- (select balances $1) $3)), (store balances $2 (- (select balances $2) $3))]

  - name: approve
    args:
      - name: spender
        type: Int
      - name: value
        type: Int
    return:
      - name: result
        type: Bool

    requires: |
      true

    ensures: |
      (and (let ((allowed_1 (store allowed (+ (* allowed_size msg_sender) spender) value))) 
          (= allowed_new allowed_1))
          (= result true)   
      )

    terms:
      Int: [$1, $2, (* allowed_size msg_sender), (+ (* allowed_size msg_sender) $1)]
      (Array Int Int): [allowed, (store allowed (+ (* allowed_size msg_sender) $1) $2)]

  - name: allowance
    args:
      - name: owner
        type: Int
      - name: spender
        type: Int
    return:
      - name: remaining
        type: Int

    requires: |
      true

    ensures: |
      (= remaining (select allowed (+ (* allowed_size owner) spender)))

    terms:
      Int: [$1, $2, (* allowed_size owner), (+ (* allowed_size $1) $2), (select allowed (+ (* allowed_size $1) $2))]
      (Array Int Int): [allowed]

  - name: increaseApproval
    args:
      - name: spender
        type: Int
      - name: addedValue
        type: Int
    return:
      - name: success
        type: Bool

    requires: |
      true

    ensures: |
      (and (let ((allowed_1 (store allowed (+ (* allowed_size msg_sender) spender) (+ (select allowed (+ (* allowed_size msg_sender) spender)) addedValue)))) 
          (= allowed_new allowed_1))
          (= success true)   
      )
    
    terms:
      Int: [$1, $2, (* allowed_size msg_sender), (+ (* allowed_size msg_sender) $1), (select allowed (+ (* allowed_size msg_sender) $1)), (+ (select allowed (+ (* allowed_size msg_sender) $1)) $2)]
      (Array Int Int): [allowed, (store allowed (+ (* allowed_size msg_sender) $1) (+ (select allowed (+ (* allowed_size msg_sender) $1)) $2))]

  - name: decreaseApproval
    args:
      - name: spender
        type: Int
      - name: subtractedValue
        type: Int
    return:
      - name: success
        type: Bool

    requires: |
      true

    ensures: |
      (and (let ((oldValue (select allowed (+ (* allowed_size msg_sender) spender)))) 
          (ite (> subtractedValue oldValue)
              (let ((allowed_1 (store allowed (+ (* allowed_size msg_sender) spender) 0)))(= allowed_new allowed_1))
              (let ((allowed_1 (store allowed (+ (* allowed_size msg_sender) spender) (- oldValue subtractedValue))))(= allowed_new allowed_1))))
          (= success true)
      )

    terms:
      Int: [$1, $2, (* allowed_size msg_sender), (+ (* allowed_size msg_sender) $1), (select allowed (+ (* allowed_size msg_sender) $1)), 0]
      (Array Int Int): [allowed, (store allowed (+ (* allowed_size msg_sender) $1) 0)]

predicates:
  - name: "="
    type: [Int, Int]
  - name: ">"
    type: [Int, Int]
  - name: "="
    type: [(Array Int Int), (Array Int Int)]
