name: string

state:
  - name: data
    type: String

states_equal:
  definition: (= data data_new)

methods:
  - name: substr
    args:
      - name: start
        type: Int
      - name: end
        type: Int
    return:
      - name: result
        type: Bool
    requires: |
      (and (>= start 0) (<= end (str.len data)) (<= start end) (< start (str.len data)))
    ensures: |
      (and
          (= data_new (str.substr data start end))
          (= result true)
      )
    terms:
      Int: [0, 1, start, end, (str.len data)]
      String: [data, (str.substr data start end)]
  - name: isEmpty
    args: []
    return:
      - name: result
        type: Bool
    requires: |
      true
    ensures: |
      (and
          (= data_new data)
          (= result (= (str.len data) 0))
      )
    terms:
      Int: [0, 1, (str.len data)]
      String: [data]
  - name: hasChar
    args:
      - name: chara
        type: String
    return:
      - name: result
        type: Bool
    requires: | 
      (= (str.len chara) 1)
    ensures: |
      (and
          (= data_new data)
          (= result (str.contains data chara))
      )
    terms:
      Int: [0, 1, (str.len data)]
      String: [data, chara]
  - name: concat
    args:
      - name: other
        type: String
    return:
      - name: result
        type: Bool
    requires: | 
      true
    ensures: |
      (and
          (= data_new (str.++ data other))
          (= result true)
      )
    terms:
      Int: [0, 1, (str.len data), (str.len other)]
      String: [data, other]

predicates:
  - name: "="
    type: [Int, Int]
  - name: "<="
    type: [Int, Int]
  - name: "="
    type: [String, String]
  - name: "str.contains"
    type: [String, String]
